[package]
name = "vhrd-module-template"
version = "0.1.0"
authors = ["Roman Isaikin <romix.lab@gmail.com>"]
edition = "2018"

[dependencies]
cortex-m = "0.6"
cortex-m-rt = "0.6"
nb = "1.0"
#stm32f0xx-hal = { version = "0.16", features = ["rt"] } # Be careful updating, on 0.17 SPI is broken!
stm32f0xx-hal = { git = "https://github.com/romixlab/stm32f0xx-hal.git", features = ["rt"] }
cortex-m-rtic = "0.6.0-alpha.5"
tim-systick-monotonic = { version = "0.1.0", git = "https://github.com/romixlab/tim-systick-monotonic.git" }
embedded-time = "0.12"
embedded-hal = "0.2"
vhrdcan = { git = "https://github.com/vhrdtech/vhrdcan.git", version = "0.1.0" }
mcp25625 = { git = "https://github.com/romixlab/mcp25625.git", version = "0.1.0", optional = true }
rtt-target = { version = "0.3", features = ["cortex-m"], optional = true }
cfg-if = "1.0.0"
heapless = "0.7"
uavcan-llr = { features = ["vhrdcan"], git = "https://github.com/vhrdtech/uavcan-llr.git" }
#vhrd-module-nvconfig = { git = "https://github.com/vhrdtech/vhrd-module-nvconfig.git" }
hx711 = { version = "0.6.0", optional = true }
drv8323 = { git = "https://github.com/romixlab/drv8323-rs.git", optional = true }

[patch."https://github.com/romixlab/drv8323-rs.git"]
drv8323 = { path = "../drv8323-rs" }

#[patch."https://github.com/romixlab/stm32f0xx-hal.git"]
#stm32f0xx-hal = { path = "../stm32f0xx-hal" }

[features]
# Select module and variant if any
module-button = []
module-pi = []
module-led = ["drv8323"]
module-afe = []
module-afe-hx711 = ["hx711"]
module-afe-lmp = []
module-afe-lmp90080 = ["module-afe-lmp"]
module-afe-lmp90100 = ["module-afe-lmp"]
# Select chip
f051c8u = ["stm32f0xx-hal/stm32f051", "tim-systick-monotonic/f0x1-tim15-tim17"]
f072c8u = ["stm32f0xx-hal/stm32f072", "tim-systick-monotonic/f0x2-tim15-tim17"]
# Select CAN Bus driver, mcp25625 (for mcp2515 also) or mcp2518fd and/or canstm (only on F072)
can-mcp25625 = ["mcp25625"]
can-mcp2518fd = []
can-stm = ["f072c8u"]
# Enable CAN Bus logging or not
can-printstat = ["log-level-debug"]
# Select logging interface or none
log-text-rtt = ["rtt-target"] # Log in text format over RTT
log-text-can = [] # Log in text format over CAN
log-defmt-rtt = [] # Log in defmt binary format over RTT
log-defmt-can = [] # Log in defmt binary format over CAN
# Select logging level
log-level-default = []
log-level-trace = ["log-level-debug"]
log-level-debug = ["log-level-info"]
log-level-info = ["log-level-warn"]
log-level-warn = ["log-level-error"]
log-level-error = []

[profile.release]
opt-level = "z"
codegen-units = 1
lto = true